==============
State in REACT
==============

So to make our site dynamic, adding 
to-do items, deleting them, we need 
to utilize the REACT concept of STATE 

So inside of our main App() function, before 
the return keyword, we use the useState() hook

This is a hook in react we need to import at the 
top of the App.jsx file: 

import { useState } from "react"

by default useState takes a value, 
in our case an empty string 

useState("")

because we're going to hook it up to our 
input text field, and by default the text field 
should be an empty string

This will return to us an array, the first value 
will be a new value, whatever is passed into the 
text input field 

The second item in the array will be a function
called setNewItem, this is a very common naming 
syntax you'll likely see when working on React 
codebases 

const [newItem, setNewItem] = useState("")

In React, by default state is immutable, it cannot 
change

To change the value we need to utilize that 
function setNewItem

setNewItem("walk dogs")

and what this does is update the [newItem] value 
from that array to be "walk dogs"

But to do this, it actually will re-render the entire 
component

But we need to update our input when it changes, so 
inside our jsx: 

  <input value={newItem} type="text" id="item" />

  So now after adding that value={newItem}
  when we change the value of 

  const [newItem, setNewItem] = useState("walk dogs")
  we see in the DOM the input field becomes, walk dogs 

  Now we need to leave that blank for 
  the user to input the to do item themselves
  , so remove the "walk dogs" string 